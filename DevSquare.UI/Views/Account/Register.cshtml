@model RegisterViewModel
@{
    ViewData["Title"] = "Register";
}

<div class="row justify-content-center">
    <div class="col-md-6 col-lg-5">
        <div class="card shadow-sm">
            <div class="card-header bg-success text-white text-center">
                <h4 class="mb-0">
                    <i class="bi bi-person-plus me-2"></i>Join DevSquare
                </h4>
            </div>
            <div class="card-body p-4">
                <form asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" id="registerForm">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3" role="alert"></div>
                    
                    <div class="mb-3">
                        <label asp-for="Username" class="form-label">Username <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-person"></i>
                            </span>
                            <input asp-for="Username" class="form-control" placeholder="Choose a username" autocomplete="username" />
                        </div>
                        <div class="form-text">3-20 characters, letters, numbers, and underscores only</div>
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="Email" class="form-label">Email Address <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-envelope"></i>
                            </span>
                            <input asp-for="Email" class="form-control" placeholder="Enter your email" autocomplete="email" />
                        </div>
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="Password" class="form-label">Password <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-lock"></i>
                            </span>
                            <input asp-for="Password" class="form-control" placeholder="Create a strong password" autocomplete="new-password" />
                        </div>
                        <div class="form-text">At least 8 characters with uppercase, lowercase, number, and special character</div>
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="ConfirmPassword" class="form-label">Confirm Password <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-lock-fill"></i>
                            </span>
                            <input asp-for="ConfirmPassword" class="form-control" placeholder="Confirm your password" autocomplete="new-password" />
                        </div>
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>
                    
                    <div class="mb-3 form-check">
                        <input asp-for="AgreeToTerms" class="form-check-input" />
                        <label asp-for="AgreeToTerms" class="form-check-label">
                            I agree to the <a asp-controller="Home" asp-action="Terms" class="text-decoration-none">Terms of Service</a> and 
                            <a asp-controller="Home" asp-action="Privacy" class="text-decoration-none">Privacy Policy</a> <span class="text-danger">*</span>
                        </label>
                        <span asp-validation-for="AgreeToTerms" class="text-danger"></span>
                    </div>
                    
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-person-plus me-2"></i>Create Account
                        </button>
                    </div>
                    
                    <hr class="my-4">
                    
                    <div class="text-center">
                        <p class="mb-0">
                            Already have an account? 
                            <a asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" class="text-decoration-none fw-bold">
                                <i class="bi bi-box-arrow-in-right me-1"></i>Login here
                            </a>
                        </p>
                    </div>
                </form>
            </div>
        </div>
        
        <div class="text-center mt-3">
            <small class="text-muted">
                <i class="bi bi-shield-check me-1"></i>
                Your information is secure and will never be shared with third parties.
            </small>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('registerForm');
            const password = form.querySelector('input[name="Password"]');
            const confirmPassword = form.querySelector('input[name="ConfirmPassword"]');
            const submitBtn = form.querySelector('button[type="submit"]');
            
            // Focus on username field when page loads
            form.querySelector('input[name="Username"]').focus();
            
            // Real-time password confirmation check
            function checkPasswordMatch() {
                if (confirmPassword.value && password.value !== confirmPassword.value) {
                    confirmPassword.setCustomValidity('Passwords do not match');
                    confirmPassword.classList.add('is-invalid');
                } else {
                    confirmPassword.setCustomValidity('');
                    confirmPassword.classList.remove('is-invalid');
                }
            }
            
            password.addEventListener('input', checkPasswordMatch);
            confirmPassword.addEventListener('input', checkPasswordMatch);
            
            // Handle form submission
            form.addEventListener('submit', function(e) {
                const originalText = submitBtn.innerHTML;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Creating Account...';
                submitBtn.disabled = true;
                
                // Re-enable button if form validation fails
                setTimeout(() => {
                    if (!this.checkValidity()) {
                        submitBtn.innerHTML = originalText;
                        submitBtn.disabled = false;
                    }
                }, 100);
            });
        });
    </script>
}
